---
title: "Regresión Logística"
subtitle: ""
autor: "Jesús Turpín"
format:
  html:
    code-fold: true
editor: visual
toc: true
toc-depth: 3
---

# Problema de regresión logística de predicción de Hipotiroidismo

El dataset es original de UCI ML repository. [Link](https://archive.ics.uci.edu/dataset/102/thyroid+disease) [Enlace a Kaggle](https://www.kaggle.com/datasets/bidemiayinde/thyroid-sickness-determination)

En este notebook tomaremos como referencia el material del profesor Dr. Tirthajyoti Sarkar donde demuestra como resolver un problema de regresión logística de predicción de Hipotiroidismo.

## 1. Carga de librerías y dataset

```{r echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)
library(broom)
library(caret)
library(glmnet)
library(skimr)
library(corrplot)
library(glmnet)
library(pROC)
```

El archivo viene sin cabeceras, por lo que tenemos que añadir los nombres de las columnas

```{r warning=FALSE, message=FALSE}
names <- c('response', 'age', 'sex', 'on_thyroxine', 'query_on_thyroxine', 
           'antithyroid_medication', 'thyroid_surgery', 'query_hypothyroid', 
           'query_hyperthyroid', 'pregnant', 'sick', 'tumor', 'lithium', 
           'goitre', 'TSH_measured', 'TSH', 'T3_measured', 'T3', 
           'TT4_measured', 'TT4', 'T4U_measured', 'T4U', 'FTI_measured', 
           'FTI', 'TBG_measured', 'TBG')

df <- read_csv("data/hypothyroid.csv", col_names = names, na = c("", " ", "NA", "?"))
```

Estructura del fichero:

```{r}
glimpse(df)
```

## 2. Preprocesamiento

### 2.1 Eliminar columnas innecesarias

Borrar columnas con la palabra measured y query. Borramos también TBG, que no contiene información.

```{r}
df <- df %>%
  select(-contains("measured"), -contains("query"), -TBG) 
```

```{r}
glimpse(df)
```
### 2.2 Conversiones de tipos

Convertimos a factor las variables categóricas:

```{r}
df <- df %>%
  mutate_if(is.character, factor) 
```

```{r}
summary(df)
```
### 2.3 Tratamiento de NAs

```{r}
skim(df)
```

```{r}
df %>%
  mutate(any_na = rowSums(is.na(.)) > 0) %>%
  group_by(any_na) %>%
  summarise(Count = n(),
            PositiveResponse = sum(response == "hypothyroid"),
            Percentage = (PositiveResponse / Count) * 100)
```
```{r}
df %>%
  summarise(Count = n(),
            PositiveResponse = sum(response == "hypothyroid"),
            Percentage = (PositiveResponse / Count) * 100)
```
Las variables lógicas no tienen NAs, pero las numéricas y el sexo, tienen un % considerable. Además, aquellas filas con algún valor NA son menos propensas a ser positivo en la variable de respuesta. Pasamos de un 4.7 % de positivos a un 6.1 %. 

Un detalle que podríamos hacer para intentar completar esos huecos:

```{r}
df %>%
  filter(is.na(sex), pregnant)

#df <- df %>%
  #mutate(sex = if_else((is.na(sex) & pregnant), "female", sex))
```

No es demasiado útil, pues age sigue siendo NA.

Tenemos un buen % de filas con alguna variable NA, 1/3 del total, además vemos que los que no tienen NA son algo más propensos a tener positivos. No obstante, como no somos expertos en la materia, vamos a simplificar el tratamiento de NA, eliminando todas las filas con valores NA.


```{r}
df <- na.omit(df)
```

### 2.4 One-Hot encoding para variables categóricas

```{r}
df <- df %>%
  mutate(response_one = (response == "hypothyroid")*1)
```

```{r}
glimpse(df)
```
## 3. Análisis exploratorio

Para ver cómo influyen las variables en la respuesta vamos a realizar la matriz de correlación y diagramas de caja para las variables numéricas:

```{r}
df <- df %>%
  mutate(sex = (sex == "F")) %>%
  rename(is_female = "sex")
```

```{r}
df %>%
  select_if(is.numeric) %>%
  cor() %>%
  corrplot(method = "number")
```

```{r}
logical_vars <- c("response_one", "on_thyroxine", "antithyroid_medication", "thyroid_surgery", "pregnant", "sick", "tumor", "lithium", "goitre")
 df %>%
   select_at(logical_vars) %>%
   cor() %>%
   corrplot()
```

```{r}
df %>%
  pivot_longer(cols = all_of(numeric_vars), names_to = "variable", values_to = "value") %>%

# Crear el gráfico combinado con facet_wrap
ggplot(aes(x = response, y = value, fill = response)) +
  geom_boxplot() +
  facet_wrap(~variable, scales = "free_y") +
  labs(title = "Boxplots of Numeric Variables by Response",
       x = "Response",
       y = "Value") +
  theme_minimal()
```


Observaciones clave:

TSH (Hormona estimulante de la tiroides): Esta variable muestra una correlación positiva fuerte con response_one (0.565). Esto indica que a medida que los niveles de TSH aumentan, también lo hace la probabilidad de ser positivo en la condición de hipotiroidismo.

FTI (Índice de tiroxina libre): Existe una correlación negativa significativa entre FTI y response_one (-0.469). Esto sugiere que valores más bajos de FTI están asociados con un mayor riesgo de hipotiroidismo.

TT4 (Tiroxina total): TT4 también muestra una correlación negativa moderada con response_one (-0.401). Similar a FTI, niveles más bajos de TT4 pueden estar asociados con la condición.

T3 (Triyodotironina): La correlación negativa de T3 con response_one (-0.201) sugiere una tendencia similar a la de TT4 y FTI, aunque la asociación es más débil.

Edad (age): La correlación es relativamente baja (0.030) pero positiva, lo que podría indicar un ligero aumento en el riesgo de hipotiroidismo con la edad.

Sexo (is_female): La correlación positiva con response_one (0.040) sugiere una leve tendencia a que las mujeres tengan mayor probabilidad de ser diagnosticadas con hipotiroidismo en comparación con los hombres.

Uso de tiroxina (on_thyroxine): Esta variable muestra una correlación negativa (-0.048) con response_one, lo que podría indicar que el uso de tiroxina está asociado con una menor probabilidad de hipotiroidismo, aunque la relación no es fuerte.

Las correlaciones restantes con response_one son relativamente bajas, lo que sugiere que estas variables tienen una influencia menor o más compleja que no se capta a través de la correlación lineal.

Es importante destacar que la correlación no implica causalidad. Estos hallazgos sugieren asociaciones pero no necesariamente indican que una variable cause el cambio en la otra. Además, algunas variables pueden estar correlacionadas entre sí (multicolinealidad), lo cual es importante considerar al interpretar los resultados y al construir modelos predictivos.

## 4. Modelo

En temas más avanzados dejaremos trabajaremos con soluciones para corregir los datos desbalanceados en regresión logística y otras técnicas de selección de variables

```{r}
df <- df %>%
  mutate_if(is.logical, as.numeric) %>%
  select(-response_one)
```
```{r}
df <- df %>% 
  mutate_if(is.numeric, scales::rescale) 
```

```{r}
df$response <- factor((df$response == "hypothyroid")*1)
```


```{r}
# Dividir los datos en conjuntos de entrenamiento y prueba
set.seed(123) # Para reproducibilidad
n <- nrow(df)
split_ratio <- 0.7

indices <- sample(1:n, n)
n_train <- round(n * split_ratio)

train_mask <- indices[1:n_train]
test_mask <- indices[(n_train + 1):n]

train_data <- df[train_mask, ]
test_data <- df[test_mask, ]

X_train <- as.matrix(train_data[, -1])
y_train <- train_data$response

X_test <- as.matrix(test_data[, -1])
y_test <- test_data$response
```



```{r}
model <- glm(response ~ ., data = train_data, family = "binomial")
```
```{r}
model <- glmnet(X_train, y_train, family = "binomial", alpha = 0)
```

```{r}
probabilidades <- predict(model, s = 0.1, newx = X_test, type = "response")
```

```{r}
probabilidades <- probabilidades[,1]
```


```{r}
roc_obj <- roc(y_test, probabilidades)
coords <- coords(roc_obj, "best")
cutoff_optimo <- coords$threshold
cutoff_optimo
```
```{r}
coords <- coords(roc_obj, "best")
cutoff_optimo <- coords$threshold
predicciones <- ifelse(probabilidades > cutoff_optimo, 1, 0)
confusion_matrix <- confusionMatrix(predicciones, y_train)
```

```{r}
predicciones
```


# Predecir y evaluar el modelo

```{r}
predicciones <- ifelse(probabilidades > cutoff_optimo, 1, 0)
```
```{r}
probabilidades <- predict(model, newx = X, s = 0.1, type = "response")
```

```{r}
#confusion_matrix <- confusionMatrix(predicciones, y_test)
dim(probabilidades)
dim(y_test)
```
```{r}
y_test <- as.numeric(y_test == "hypothyroid")
```

